{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/SearchApi/SearchApi.jsx","Components/LoaderButton/Loader.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/ImageGallery/ImageGallery.jsx","App.jsx","index.js"],"names":["Searchbar","state","name","handleInputSearchName","e","setState","currentTarget","value","handleChangeName","event","preventDefault","props","onChangeName","trim","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","tags","webformatURL","src","alt","SearchApi","searchName","page","onChangeState","onGetError","add","fetch","then","response","ok","json","Promise","reject","Error","status","hits","catch","error","LoaderButton","color","height","width","Button","onLoadMore","showModal","onClick","modalRoot","document","querySelector","Modal","handleBackdropOnClick","target","onClose","closeModalWithESC","code","window","addEventListener","removeEventListener","activeEl","imageContent","createPortal","largeImageURL","ImageGallery","images","getImageGallery","changeState","getError","loadMoreGallery","prevState","params","rez","length","scroll","scrollTo","top","documentElement","scrollHeight","behavior","console","log","toggleModal","openModal","nodeName","setActiveId","i","prevProps","map","id","App","getSearchName","alert","onToggleModal","onGetParametersForLoadButton","getParametersForLoadButton","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97ac051b.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Searchbar extends Component {\n  state = {\n    name: '',\n  };\n  handleInputSearchName = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  handleChangeName = event => {\n    event.preventDefault();\n    this.props.onChangeName(this.state.name.trim());\n    this.setState({ name: '' });\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleChangeName}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={name}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputSearchName}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","export default function ImageGalleryItem({ props }) {\n  const { tags, webformatURL } = props;\n  // console.log(id, tags, webformatURL);\n  return (\n    <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n  );\n}\n\n// export default function ImageGalleryItem({props}) {\n//     const {id, tags, webformatURL  } = props;\n//     // console.log(id, tags, webformatURL);\n//     return (\n//         <li\n//             key={id}\n//             className=\"ImageGalleryItem\">\n//             <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n//         </li>\n//     )\n\n// }\n","import Error from 'react';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '19172915-1886b55ac07c270b02db4da6f';\nconst perPage = 12;\n\nexport default function SearchApi(\n  searchName,\n  // perPage,\n  page,\n  onChangeState,\n  onGetError,\n) {\n  const add = `${BASE_URL}?q=${searchName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\n  fetch(add)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(\n        onGetError(\n          'ошибка поиска',\n          new Error('ошибка поиска' + response.status),\n        ),\n      );\n    })\n    //.//then(response => onChangeState({ status: 'resolved', images: response.hits, error:null }))\n    .then(response => onChangeState(response.hits))\n    .catch(error => onGetError('ERROR' + error.status));\n}\n","import Loader from 'react-loader-spinner';\n\nexport default function LoaderButton() {\n  return (\n    <>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        className=\"Loader\"\n      />\n    </>\n  );\n}\n","import LoaderButton from '../LoaderButton';\n\nexport default function Button({\n  status,\n  showModal,\n  onLoadMore,\n  // onCloseModal\n}) {\n  const loadMore = e => {\n    e.preventDefault();\n    // onCloseModal()\n    showModal = false;\n    onLoadMore();\n  };\n  return status === 'pending' ? (\n    <LoaderButton />\n  ) : (\n    <button className=\"Button\" type=\"button\" onClick={loadMore}>\n      Load more\n    </button>\n  );\n}\n\n//// export default function Button({ page, status, onChangeState}) {\n// //  const loadMore = e => {\n// //    e.preventDefault();\n//     // onChangeState({ status: 'pending', page: page + 1 })\n// //    onChangeState([{ status: 'pending' }, { page: page + 1 }]);\n// //  };\n// //  return status === 'pending' ? (\n// //    <LoaderButton />\n//  // ) : (\n////     <button className=\"Button\" type=\"button\" onClick={loadMore}>\n// //      Load more\n//  //   </button>\n//  // );\n//// }\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModalWithESC);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModalWithESC);\n  }\n\n  handleBackdropOnClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n      return;\n    }\n  };\n\n  closeModalWithESC = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const activeEl = this.props.imageContent;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropOnClick}>\n        <div className=\"Modal\">\n          <img src={activeEl.largeImageURL} alt={activeEl.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ImageGalleryItem from 'Components/ImageGalleryItem/ImageGalleryItem';\nimport SearchApi from 'Components/SearchApi/SearchApi';\nimport Button from 'Components/Button';\nimport Modal from '../Modal';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    error: null,\n    page: 1,\n    showModal: false,\n    activeEl: 0,\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.openModal);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      searchName,\n      // perPage\n    } = this.props.params;\n    if (prevProps.params.page !== this.props.params.page) {\n      this.loadMoreGallery();\n    }\n    if (prevProps.params.searchName !== this.props.params.searchName) {\n      this.getImageGallery(\n        searchName,\n        // perPage\n      );\n    }\n  }\n\n  getImageGallery = (\n    searchName,\n    // perPage\n  ) => {\n    this.setState({ page: 1, status: 'pending', images: [] });\n    SearchApi(\n      searchName,\n      // perPage,\n      this.state.page,\n      this.changeState,\n      this.getError,\n    );\n  };\n\n  loadMoreGallery = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      status: 'pending',\n    }));\n    const {\n      searchName,\n      // perPage\n    } = this.props.params;\n    SearchApi(\n      searchName,\n      // perPage,\n      this.state.page + 1,\n      this.changeState,\n      this.getError,\n    );\n  };\n\n  changeState = rez => {\n    if (rez.length === 0) {\n      this.setState({ status: 'rejected' });\n      return;\n    }\n    this.setState(\n      prevState => ({\n        images: [...prevState.images, ...rez],\n        status: 'resolved',\n      }),\n      this.scroll,\n    );\n  };\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  getError = rez => {\n    console.log(rez);\n    this.setState({ error: 'error', status: 'rejected' });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n    // console.log('TOGGLE showModal', this.state.showModal)\n  };\n\n  openModal = e => {\n    if (e.target.nodeName === 'IMG') {\n      this.setState({ showModal: true });\n    }\n  };\n\n  setActiveId = i => {\n    this.setState({ activeEl: i });\n  };\n\n  render() {\n    const { images, status, showModal, activeEl } = this.state;\n\n    if (status === 'idle') {\n      return <>{/* <p>'Введите название'</p> */}</>;\n    }\n    if (status === 'rejected') {\n      return <p className=\"Button\">Увы , ничего не найдено</p>;\n    }\n\n    if (status === 'pending' || status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {images.map(({ id, tags, webformatURL }, i) => (\n              <li\n                key={id + i * i}\n                className=\"ImageGalleryItem\"\n                onClick={() => this.setActiveId(i)}\n              >\n                <ImageGalleryItem props={{ tags, webformatURL }} />\n              </li>\n            ))}\n          </ul>\n          {/* <ul className=\"ImageGallery\">\n                    {images.map(({ id, tags, webformatURL }) =>\n                        <ImageGalleryItem\n                            props={{ id, tags, webformatURL }}\n                        />\n                    )}\n                </ul> */}\n          {images.length && (\n            <Button\n              onLoadMore={this.loadMoreGallery}\n              status={status}\n              showModal={showModal}\n            />\n          )}\n\n          {showModal && (\n            <Modal\n              onClose={this.toggleModal}\n              // imageContent={images[activeEl].largeImageURL}\n              imageContent={images[activeEl]}\n            />\n          )}\n        </>\n      );\n    }\n  }\n}\n\n//----------------------------------------------------\n\n// componentDidUpdate(prevProps, prevState) {\n//     const { searchName, perPage } = this.props.params;\n//     console.log(' Стейт до выполнения фетча, перед условием :', this.state);\n//     console.log('имя поиска', searchName);\n\n//     if (prevProps.params.searchName !== searchName)\n//       {\n//         console.log('prevState.page', prevState.page)\n//         console.log('this.state.page', this.state.page)\n//         console.log('Выполняется условие 1');\n//       this.setState({ images: [], status: 'pending', error: null, page: 1 })\n//       this.getTest()\n\n//     SearchApi(this.state.page, searchName, perPage, this.changeState)\n//     console.log(' СТейт после выполнения фетча:', this.state);\n// }\n//   console.log(' Стейт до выполнения фетча после условия на наличие имени:', this.state);\n\n//   if (prevState.page !== this.state.page) {\n//     console.log('Выполняется условие 2');\n//     SearchApi(this.state.page, searchName, perPage, this.changeState);\n//     this.setState(\n//     prevState => ({\n//       images: [...prevState.images, ...this.state.images],\n//     }),\n//     this.scroll,)\n//   }\n\n// }\n\n// //* оба варианта рабочие:\n// //, Вариант -1 (через масссив объектов)\n// changeState = params => {\n//   params.map(param => this.setState(param));\n//   console.log('this.state в поле изменения стейта  после фетча', this.state)\n// };\n\n// //, Вариант -2 (через распыление объектов)\n// // changeState = params => {\n// //     this.setState({...params})\n// // }\n\n// scroll = () => {\n//   window.scrollTo({\n//     top: document.documentElement.scrollHeight,\n//     behavior: 'smooth',\n//   });\n// };\n\n// render() {\n\n//     const { images, page, status } = this.state;\n\n//     if (status === 'idle') {\n\n//       return (\n//         <>\n//           {/* <p>'Введите название'</p> */}\n//         </>\n//       )\n\n//     }\n//! - разобраться с ошибкой\n// if (status === 'rejected') {\n//    return (error.massage)\n// }\n\n//       if (status === 'pending' || status === 'resolved') {\n//         return (\n//           <>\n//             <ul className=\"ImageGallery\">\n//               {images.map(({ id, tags, webformatURL }) => (\n//                 <li key={id} className=\"ImageGalleryItem\">\n//                   <ImageGalleryItem props={{ tags, webformatURL }} />\n//                 </li>\n//               ))}\n//             </ul>\n//             {/* <ul className=\"ImageGallery\">\n//                     {images.map(({ id, tags, webformatURL }) =>\n//                         <ImageGalleryItem\n//                             props={{ id, tags, webformatURL }}\n//                         />\n//                     )}\n//                 </ul> */}\n//           {images.length && (\n//             <Button\n//               onChangeState={this.changeState}\n//               onScroll={this.scroll()}\n//               page={page}\n//               status={status}\n//               onLoadMore={this.loadMoreGallery}\n// />\n//  )}\n// </>\n//         )\n//       }\n//     }\n// }\n","import React, { Component } from 'react';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from 'Components/ImageGallery/ImageGallery';\n// const perPage = 12;\n\nexport default class App extends Component {\n  state = {\n    searchName: '',\n    page: 1,\n  };\n\n  getSearchName = name => {\n    if (name === '') {\n      alert('поле не должно быть пустым');\n      return;\n    }\n    this.setState({ searchName: name });\n  };\n\n  render() {\n    const { searchName, page } = this.state;\n    return (\n      <>\n        <Searchbar onChangeName={this.getSearchName} />\n        <ImageGallery\n          params={{\n            searchName,\n            // perPage,\n            page\n          }}\n          onToggleModal={this.toggleModal}\n          onGetParametersForLoadButton={this.getParametersForLoadButton}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}